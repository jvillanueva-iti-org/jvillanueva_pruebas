name: Build

#on:
#  push:
#    branches:
#      - main
#      - 15.0
#      - 14.0-dev
#  pull_request:
#    types: [opened, synchronize, reopened]
on:
  issue_comment:
    types: ["created"]

jobs:
  build:
    name: Build
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/deploy test') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Pull Request
        uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.issue.number }}/head"
          path: PR
      - uses: sonarsource/sonarqube-scan-action@master
        with:
            args: >
              -Dsonar.projectKey=Pruebas
              -Dsonar.pullrequest.key=${{ github.event.issue.number }}
              -Dsonar.pullrequest.branch=dev
              -Dsonar.pullrequest.base=main
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #- name: SonarQube Quality Gate check
      #  id: sonarqube-quality-gate-check
      #  uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
      #  timeout-minutes: 5
      #  env:
      #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      #- name: "Example show SonarQube Quality Gate Status value"
      #  run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
